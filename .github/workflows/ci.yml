name: "CI"
on:
  push:
    branches-ignore:
      - 'dependabot/**'
      - release
  pull_request:

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Install GNU tar
        if: runner.os == 'macOS'
        run: |
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH

      # 【重大简化】我们不再需要手动获取 yarn 缓存路径和调用 actions/cache
      # 直接在 setup-node 中开启缓存功能！
      - name: setup node with yarn cache
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: 'yarn' # <-- 魔法就在这里！

      # cargo 的缓存保持不变，因为它没有问题
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            desktop/src-tauri/target
          key: ${{ matrix.platform }}-cargo-v2-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.platform }}-cargo-v2-
            
      - name: install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          
      - name: install tauri bundler
        if: runner.os != 'Windows'
        run: cargo install tauri-bundler || [ $? -eq 101 ]
        
      - name: install tauri cli
        # 我们不再安装 tauri-bundler，而是安装官方的 tauri-cli
        run: cargo install tauri-cli
        
      - name: install webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 squashfs-tools
          
      - name: install app dependencies
        run: yarn
        
      - name: build app
        run: cd desktop; yarn tauri:build
        
      - name: fake yarn
        run: node -e "eval(process.env.COMMAND)"
        env:
          COMMAND: 'fs.writeFileSync("desktop/yarn.lock","")'
          
      - uses: tauri-apps/tauri-action@v0
        with:
          npmScript: "tauri:build"
          projectPath: desktop/
          
      - uses: actions/upload-artifact@v4
        with:
          name: my-artifact-${{ runner.os }}
          path: desktop/src-tauri/target/release/bundle
 
